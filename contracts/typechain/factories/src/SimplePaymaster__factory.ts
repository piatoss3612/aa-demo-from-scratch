/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SimplePaymaster,
  SimplePaymasterInterface,
} from "../../src/SimplePaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxCost_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    name: "MaxCostExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderNotWhitelisted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "MaxCostChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "Whitelisted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxCost_",
        type: "uint256",
      },
    ],
    name: "setMaxCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setWhitelistedBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620012af380380620012af83398101604081905262000034916200019d565b8133806200005d57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000068816200008a565b506200007481620000da565b6001600160a01b03166080526001555062000204565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516301ffc9a760e01b815263122a0e9b60e31b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000126573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014c9190620001d9565b6200019a5760405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d617463680000604482015260640162000054565b50565b60008060408385031215620001b157600080fd5b82516001600160a01b0381168114620001c957600080fd5b6020939093015192949293505050565b600060208284031215620001ec57600080fd5b81518015158114620001fd57600080fd5b9392505050565b60805161105e620002516000396000818161028901528181610387015281816104510152818161069c01528181610763015281816107ec0152818161089f0152610a10015261105e6000f3fe6080604052600436106100f35760003560e01c80639281aa0b1161008a578063c399ec8811610059578063c399ec88146102e0578063d0e30db014610303578063e647e01a1461030b578063f2fde38b1461032b57600080fd5b80639281aa0b14610257578063b0d691fe14610277578063bb9fe6bf146102ab578063c23a5cea146102c057600080fd5b806352b7512c116100c657806352b7512c146101a8578063715018a6146101d65780637c627b21146101eb5780638da5cb5b1461020b57600080fd5b80630396cb60146100f8578063205c28781461010d5780632f6707e91461012d5780633af32abf1461014d575b600080fd5b61010b610106366004610ce5565b61034b565b005b34801561011957600080fd5b5061010b610128366004610d34565b6103fd565b34801561013957600080fd5b5061010b610148366004610d75565b610495565b34801561015957600080fd5b50610193610168366004610df9565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff1690565b60405190151581526020015b60405180910390f35b3480156101b457600080fd5b506101c86101c3366004610e16565b6105ad565b60405161019f929190610e6a565b3480156101e257600080fd5b5061010b6105d0565b3480156101f757600080fd5b5061010b610206366004610edd565b6105e4565b34801561021757600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019f565b34801561026357600080fd5b5061010b610272366004610f75565b610600565b34801561028357600080fd5b506102327f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b757600080fd5b5061010b610692565b3480156102cc57600080fd5b5061010b6102db366004610df9565b610716565b3480156102ec57600080fd5b506102f56107bb565b60405190815260200161019f565b61010b610871565b34801561031757600080fd5b5061010b610326366004610faa565b6108f9565b34801561033757600080fd5b5061010b610346366004610df9565b61093c565b6103536109a5565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690630396cb609034906024016000604051808303818588803b1580156103e157600080fd5b505af11580156103f5573d6000803e3d6000fd5b505050505050565b6104056109a5565b6040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156103e157600080fd5b61049d6109a5565b60005b828110156105a75781600260008686858181106104bf576104bf610fc3565b90506020020160208101906104d49190610df9565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905583838281811061053957610539610fc3565b905060200201602081019061054e9190610df9565b73ffffffffffffffffffffffffffffffffffffffff167fa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f2644083604051610597911515815260200190565b60405180910390a26001016104a0565b50505050565b606060006105b96109f8565b6105c4858585610a97565b91509150935093915050565b6105d86109a5565b6105e26000610b94565b565b6105ec6109f8565b6105f98585858585610c09565b5050505050565b6106086109a5565b73ffffffffffffffffffffffffffffffffffffffff821660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527fa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f26440910160405180910390a25050565b61069a6109a5565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561070257600080fd5b505af11580156105a7573d6000803e3d6000fd5b61071e6109a5565b6040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b1580156107a757600080fd5b505af11580156105f9573d6000803e3d6000fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c9190610ff2565b905090565b6040517fb760faf90000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063b760faf99034906024016000604051808303818588803b1580156107a757600080fd5b6109016109a5565b60018190556040518181527f9e7788636960028d9036de685b76b45637492ef64857b3c81d481784d083d8c89060200160405180910390a150565b6109446109a5565b73ffffffffffffffffffffffffffffffffffffffff8116610999576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6109a281610b94565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105e2576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610990565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146105e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152606401610990565b823573ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260408120546060929060ff16610b14576040517fbf3f938900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610990565b600154841115610b53576040517f2480caeb00000000000000000000000000000000000000000000000000000000815260048101859052602401610990565b6040805173ffffffffffffffffffffffffffffffffffffffff8316602080830191909152825180830390910181529082019091529660009650945050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610c4a85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cc992505050565b9050610c7b8173ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff1690565b6103f5576040517fbf3f938900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610990565b600081806020019051810190610cdf919061100b565b92915050565b600060208284031215610cf757600080fd5b813563ffffffff81168114610d0b57600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146109a257600080fd5b60008060408385031215610d4757600080fd5b8235610d5281610d12565b946020939093013593505050565b80358015158114610d7057600080fd5b919050565b600080600060408486031215610d8a57600080fd5b833567ffffffffffffffff80821115610da257600080fd5b818601915086601f830112610db657600080fd5b813581811115610dc557600080fd5b8760208260051b8501011115610dda57600080fd5b602092830195509350610df09186019050610d60565b90509250925092565b600060208284031215610e0b57600080fd5b8135610d0b81610d12565b600080600060608486031215610e2b57600080fd5b833567ffffffffffffffff811115610e4257600080fd5b84016101208187031215610e5557600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610e985760208187018101516060868401015201610e7b565b5060006060828501015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168401019150508260208301529392505050565b600080600080600060808688031215610ef557600080fd5b853560038110610f0457600080fd5b9450602086013567ffffffffffffffff80821115610f2157600080fd5b818801915088601f830112610f3557600080fd5b813581811115610f4457600080fd5b896020828501011115610f5657600080fd5b9699602092909201985095966040810135965060600135945092505050565b60008060408385031215610f8857600080fd5b8235610f9381610d12565b9150610fa160208401610d60565b90509250929050565b600060208284031215610fbc57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561100457600080fd5b5051919050565b60006020828403121561101d57600080fd5b8151610d0b81610d1256fea26469706673582212208eda365ec47482e797ea0e95bcc86c552bfdac59f127eaeaca1331f61adbc51d64736f6c63430008180033";

type SimplePaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimplePaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimplePaymaster__factory extends ContractFactory {
  constructor(...args: SimplePaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    maxCost_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimplePaymaster> {
    return super.deploy(
      _entryPoint,
      maxCost_,
      overrides || {}
    ) as Promise<SimplePaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    maxCost_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, maxCost_, overrides || {});
  }
  override attach(address: string): SimplePaymaster {
    return super.attach(address) as SimplePaymaster;
  }
  override connect(signer: Signer): SimplePaymaster__factory {
    return super.connect(signer) as SimplePaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimplePaymasterInterface {
    return new utils.Interface(_abi) as SimplePaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimplePaymaster {
    return new Contract(address, _abi, signerOrProvider) as SimplePaymaster;
  }
}
