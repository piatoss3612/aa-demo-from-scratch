/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SimpleEntryPoint,
  SimpleEntryPointInterface,
} from "../../src/SimpleEntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "ret",
        type: "bytes",
      },
    ],
    name: "DelegateAndRevert",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "inner",
        type: "bytes",
      },
    ],
    name: "FailedOpWithRevert",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "PostOpReverted",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "PostOpRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "UserOperationPrefundTooLow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "delegateAndRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "deposit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSenderCreator",
    outputs: [
      {
        internalType: "contract SenderCreator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "accountGasLimits",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "gasFees",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct PackedUserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "paymasterVerificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "paymasterPostOpGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052604051620000129062000055565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b50600160025562000063565b610233806200405483390190565b608051613fc76200008d600039600081816104e4015281816111180152612d8c0152613fc76000f3fe6080604052600436106101475760003560e01c806370a08231116100c0578063b760faf911610074578063c23a5cea11610059578063c23a5cea14610536578063dbed18e014610556578063fc7e286d1461057657600080fd5b8063b760faf91461050e578063bb9fe6bf1461052157600080fd5b8063850aaf62116100a5578063850aaf621461048a5780639b249f69146104aa578063a3d454a5146104ca57600080fd5b806370a0823114610434578063765e827f1461046a57600080fd5b80631b2e01b81161011757806322cdde4c116100fc57806322cdde4c1461024a57806335567e1a1461026a5780635287ce12146102f257600080fd5b80631b2e01b8146101f2578063205c28781461022a57600080fd5b806242dc531461015c57806301ffc9a71461018f5780630396cb60146101bf5780630bd28e3b146101d257600080fd5b366101575761015533610648565b005b600080fd5b34801561016857600080fd5b5061017c610177366004613306565b61069d565b6040519081526020015b60405180910390f35b34801561019b57600080fd5b506101af6101aa3660046133c6565b61083f565b6040519015158152602001610186565b6101556101cd366004613408565b6109bc565b3480156101de57600080fd5b506101556101ed366004613456565b610cea565b3480156101fe57600080fd5b5061017c61020d366004613471565b600160209081526000928352604080842090915290825290205481565b34801561023657600080fd5b506101556102453660046134a6565b610d32565b34801561025657600080fd5b5061017c6102653660046134d2565b610e8e565b34801561027657600080fd5b5061017c610285366004613471565b6001600160a01b038216600090815260016020908152604080832077ffffffffffffffffffffffffffffffffffffffffffffffff8516845290915290819020549082901b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000161792915050565b3480156102fe57600080fd5b506103d261030d36600461350e565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a0810184528154815260019091015460ff811615159282019290925261010082046dffffffffffffffffffffffffffff16928101929092526f01000000000000000000000000000000810463ffffffff166060830152730100000000000000000000000000000000000000900465ffffffffffff16608082015290565b6040516101869190600060a082019050825182526020830151151560208301526dffffffffffffffffffffffffffff604084015116604083015263ffffffff606084015116606083015265ffffffffffff608084015116608083015292915050565b34801561044057600080fd5b5061017c61044f36600461350e565b6001600160a01b031660009081526020819052604090205490565b34801561047657600080fd5b50610155610485366004613570565b610ed0565b34801561049657600080fd5b506101556104a53660046135c7565b61104d565b3480156104b657600080fd5b506101556104c536600461361c565b6110e5565b3480156104d657600080fd5b506040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610186565b61015561051c36600461350e565b610648565b34801561052d57600080fd5b506101556111d2565b34801561054257600080fd5b5061015561055136600461350e565b611376565b34801561056257600080fd5b50610155610571366004613570565b6115e1565b34801561058257600080fd5b506105fe61059136600461350e565b6000602081905290815260409020805460019091015460ff81169061010081046dffffffffffffffffffffffffffff16906f01000000000000000000000000000000810463ffffffff1690730100000000000000000000000000000000000000900465ffffffffffff1685565b6040805195865293151560208601526dffffffffffffffffffffffffffff9092169284019290925263ffffffff909116606083015265ffffffffffff16608082015260a001610186565b60006106548234611a32565b9050816001600160a01b03167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c48260405161069191815260200190565b60405180910390a25050565b6000805a90503330146106f75760405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c7900000000000000000060448201526064015b60405180910390fd5b8451606081015160a082015181016127100160405a603f028161071c5761071c61365e565b04101561074d577fdeaddead0000000000000000000000000000000000000000000000000000000060005260206000fd5b8751600090156107e157600061076a846000015160008c86611a65565b9050806107df57600061077e610800611a7d565b8051909150156107d95784600001516001600160a01b03168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2018760200151846040516107d09291906136dd565b60405180910390a35b60019250505b505b600088608001515a8603019050610831828a8a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250879250611aa9915050565b9a9950505050505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f60fc6b6e0000000000000000000000000000000000000000000000000000000014806108d257507fffffffff0000000000000000000000000000000000000000000000000000000082167f915074d800000000000000000000000000000000000000000000000000000000145b8061091e57507fffffffff0000000000000000000000000000000000000000000000000000000082167fcf28ef9700000000000000000000000000000000000000000000000000000000145b8061096a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f3e84f02100000000000000000000000000000000000000000000000000000000145b806109b657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b33600090815260208190526040902063ffffffff8216610a1e5760405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064016106ee565b600181015463ffffffff6f0100000000000000000000000000000090910481169083161015610a8f5760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d650000000060448201526064016106ee565b6001810154600090610ab790349061010090046dffffffffffffffffffffffffffff16613725565b905060008111610b095760405162461bcd60e51b815260206004820152601260248201527f6e6f207374616b6520737065636966696564000000000000000000000000000060448201526064016106ee565b6dffffffffffffffffffffffffffff811115610b675760405162461bcd60e51b815260206004820152600e60248201527f7374616b65206f766572666c6f7700000000000000000000000000000000000060448201526064016106ee565b6040805160a08101825283548152600160208083018281526dffffffffffffffffffffffffffff86811685870190815263ffffffff8a811660608801818152600060808a0181815233808352828a52918c90209a518b55965199909801805494519151965165ffffffffffff16730100000000000000000000000000000000000000027fffffffffffffff000000000000ffffffffffffffffffffffffffffffffffffff979094166f0100000000000000000000000000000002969096167fffffffffffffff00000000000000000000ffffffffffffffffffffffffffffff91909516610100027fffffffffffffffffffffffffffffffffff0000000000000000000000000000ff991515999099167fffffffffffffffffffffffffffffffffff00000000000000000000000000000090941693909317979097179190911691909117179055835185815290810192909252917fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01910160405180910390a2505050565b33600090815260016020908152604080832077ffffffffffffffffffffffffffffffffffffffffffffffff851684529091528120805491610d2a83613738565b919050555050565b3360009081526020819052604090208054821115610d925760405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c617267650000000000000060448201526064016106ee565b8054610d9f908390613770565b8155604080516001600160a01b03851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a26000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610e32576040519150601f19603f3d011682016040523d82523d6000602084013e610e37565b606091505b5050905080610e885760405162461bcd60e51b815260206004820152601260248201527f6661696c656420746f207769746864726177000000000000000000000000000060448201526064016106ee565b50505050565b6000610e9982611cb7565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b610ed8611cd0565b8160008167ffffffffffffffff811115610ef457610ef46130e8565b604051908082528060200260200182016040528015610f2d57816020015b610f1a613050565b815260200190600190039081610f125790505b50905060005b82811015610fa6576000828281518110610f4f57610f4f613783565b60200260200101519050600080610f8a848a8a87818110610f7257610f72613783565b9050602002810190610f8491906137b2565b85611d11565b91509150610f9b8483836000611f17565b505050600101610f33565b506040516000907fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972908290a160005b838110156110305761102481888884818110610ff357610ff3613783565b905060200281019061100591906137b2565b85848151811061101757611017613783565b60200260200101516120e1565b90910190600101610fd5565b5061103b8482612466565b5050506110486001600255565b505050565b600080846001600160a01b0316848460405161106a9291906137f0565b600060405180830381855af49150503d80600081146110a5576040519150601f19603f3d011682016040523d82523d6000602084013e6110aa565b606091505b509150915081816040517f994105540000000000000000000000000000000000000000000000000000000081526004016106ee929190613800565b6040517f570e1a360000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a369061114f9086908690600401613846565b6020604051808303816000875af115801561116e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611192919061385a565b6040517f6ca7b8060000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201529091506024016106ee565b336000908152602081905260408120600181015490916f0100000000000000000000000000000090910463ffffffff1690036112505760405162461bcd60e51b815260206004820152600a60248201527f6e6f74207374616b65640000000000000000000000000000000000000000000060448201526064016106ee565b600181015460ff166112a45760405162461bcd60e51b815260206004820152601160248201527f616c726561647920756e7374616b696e6700000000000000000000000000000060448201526064016106ee565b60018101546000906112cf906f01000000000000000000000000000000900463ffffffff1642613877565b6001830180547fffffffffffffff000000000000ffffffffffffffffffffffffffffffffffff001673010000000000000000000000000000000000000065ffffffffffff84169081027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169190911790915560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602001610691565b336000908152602081905260409020600181015461010090046dffffffffffffffffffffffffffff16806113ec5760405162461bcd60e51b815260206004820152601460248201527f4e6f207374616b6520746f20776974686472617700000000000000000000000060448201526064016106ee565b6001820154730100000000000000000000000000000000000000900465ffffffffffff1661145c5760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b65282920666972737400000060448201526064016106ee565b60018201544273010000000000000000000000000000000000000090910465ffffffffffff1611156114d05760405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f7420647565000000000060448201526064016106ee565b6001820180547fffffffffffffff000000000000000000000000000000000000000000000000ff169055604080516001600160a01b03851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a26000836001600160a01b03168260405160006040518083038185875af1925050503d806000811461158b576040519150601f19603f3d011682016040523d82523d6000602084013e611590565b606091505b5050905080610e885760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b65000000000000000060448201526064016106ee565b6115e9611cd0565b816000805b8281101561178d573686868381811061160957611609613783565b905060200281019061161b919061389d565b905036600061162a83806138d1565b90925090506000611641604085016020860161350e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001600160a01b038216016116bb5760405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f7200000000000000000060448201526064016106ee565b6001600160a01b03811615611771576001600160a01b038116632dd8113384846116e86040890189613939565b6040518563ffffffff1660e01b81526004016117079493929190613ae1565b60006040518083038186803b15801561171f57600080fd5b505afa925050508015611730575060015b611771576040517f86a9f7500000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016106ee565b61177b8287613725565b955050600190930192506115ee915050565b5060008167ffffffffffffffff8111156117a9576117a96130e8565b6040519080825280602002602001820160405280156117e257816020015b6117cf613050565b8152602001906001900390816117c75790505b5090506000805b848110156118bf573688888381811061180457611804613783565b9050602002810190611816919061389d565b905036600061182583806138d1565b9092509050600061183c604085016020860161350e565b90508160005b818110156118ad57600089898151811061185e5761185e613783565b602002602001015190506000806118818b898987818110610f7257610f72613783565b9150915061189184838389611f17565b8a61189b81613738565b9b505060019093019250611842915050565b5050600190940193506117e992505050565b506040517fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f97290600090a150600080805b858110156119ed573689898381811061190a5761190a613783565b905060200281019061191c919061389d565b905061192e604082016020830161350e565b6001600160a01b03167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d60405160405180910390a236600061197083806138d1565b90925090508060005b818110156119dc576119bb8885858481811061199757611997613783565b90506020028101906119a991906137b2565b8b8b8151811061101757611017613783565b6119c59088613725565b9650876119d181613738565b985050600101611979565b5050600190930192506118ef915050565b506040516000907f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d908290a2611a238682612466565b50505050506110486001600255565b6001600160a01b038216600090815260208190526040812080548290611a59908590613725565b91829055509392505050565b6000806000845160208601878987f195945050505050565b60603d82811115611a8b5750815b604051602082018101604052818152816000602083013e9392505050565b6000805a855190915060009081611abf8261255f565b60e08301519091506001600160a01b038116611ade5782519350611bcc565b809350600088511115611bcc57868202955060028a6002811115611b0457611b04613b98565b14611bcc5760a08301516040517f7c627b210000000000000000000000000000000000000000000000000000000081526001600160a01b03831691637c627b2191611b59908e908d908c908990600401613bc7565b600060405180830381600088803b158015611b7357600080fd5b5087f193505050508015611b85575060015b611bcc576000611b96610800611a7d565b9050806040517fad7954bc0000000000000000000000000000000000000000000000000000000081526004016106ee9190613c2a565b5a60a0840151606085015160808c015192880399909901980190880380821115611bff576064600a828403020498909801975b50506040890151878302965086811015611c745760028b6002811115611c2757611c27613b98565b03611c4a57809650611c388a612591565b611c458a6000898b6125e0565b611ca9565b7fdeadaa510000000000000000000000000000000000000000000000000000000060005260206000fd5b868103611c818682611a32565b506000808d6002811115611c9757611c97613b98565b149050611ca68c828b8d6125e0565b50505b505050505050949350505050565b6000611cc28261265b565b805190602001209050919050565b6002805403611d0b576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028055565b60008060005a8451909150611d268682612713565b611d2f86610e8e565b6020860152604081015161012082015161010083015160a08401516080850151606086015160c0870151861717171717176effffffffffffffffffffffffffffff811115611dbf5760405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f77000000000000000060448201526064016106ee565b6000611dee8460c081015160a08201516080830151606084015160408501516101009095015194010101010290565b9050611dfd8a8a8a848761282a565b9650611e11846000015185602001516129f3565b611e675789604051631101335b60e11b81526004016106ee918152604060208201819052601a908201527f4141323520696e76616c6964206163636f756e74206e6f6e6365000000000000606082015260800190565b825a86031115611ec35789604051631101335b60e11b81526004016106ee918152604060208201819052601e908201527f41413236206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b60e08401516060906001600160a01b031615611eea57611ee58b8b8b85612a41565b975090505b604089018290528060608a015260a08a01355a870301896080018181525050505050505050935093915050565b600080611f2385612c2e565b91509150816001600160a01b0316836001600160a01b031614611f925785604051631101335b60e11b81526004016106ee9181526040602082018190526014908201527f41413234207369676e6174757265206572726f72000000000000000000000000606082015260800190565b8015611fea5785604051631101335b60e11b81526004016106ee9181526040602082018190526017908201527f414132322065787069726564206f72206e6f7420647565000000000000000000606082015260800190565b6000611ff585612c2e565b925090506001600160a01b0381161561205a5786604051631101335b60e11b81526004016106ee9181526040602082018190526014908201527f41413334207369676e6174757265206572726f72000000000000000000000000606082015260800190565b81156120d85786604051631101335b60e11b81526004016106ee9181526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560608201527f6500000000000000000000000000000000000000000000000000000000000000608082015260a00190565b50505050505050565b6000805a905060006120f4846060015190565b604051909150600090368261210c60608a018a613939565b915091506060600082600381111561212357843591505b507f72288ed1000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008216016122455760008b8b60200151604051602401612186929190613c3d565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8dd7712f000000000000000000000000000000000000000000000000000000001790525190915030906242dc53906121fb9084908f908d90602401613d09565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509250506122af565b306001600160a01b03166242dc5385858d8b60405160240161226a9493929190613d49565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505091505b602060008351602085016000305af1955060005198508460405250505050508061245c5760003d806020036122ea5760206000803e60005191505b507fdeaddead0000000000000000000000000000000000000000000000000000000081036123645787604051631101335b60e11b81526004016106ee918152604060208201819052600f908201527f41413935206f7574206f66206761730000000000000000000000000000000000606082015260800190565b7fdeadaa510000000000000000000000000000000000000000000000000000000081036123ce57600086608001515a61239d9087613770565b6123a79190613725565b60408801519091506123b888612591565b6123c588600083856125e0565b955061245a9050565b855180516020808901519201516001600160a01b0390911691907ff62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f479290612415610800611a7d565b6040516124239291906136dd565b60405180910390a3600086608001515a61243d9087613770565b6124479190613725565b90506124566002888684611aa9565b9550505b505b5050509392505050565b6001600160a01b0382166124bc5760405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e6566696369617279000000000000000060448201526064016106ee565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612509576040519150601f19603f3d011682016040523d82523d6000602084013e61250e565b606091505b50509050806110485760405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e65666963696172790060448201526064016106ee565b6101008101516101208201516000919080820361257d575092915050565b61258982488301612c81565b949350505050565b80518051602080840151928101516040519081526001600160a01b0390921692917f67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e910160405180910390a350565b835160e081015181516020808801519301516040516001600160a01b039384169492909316927f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f9161264d9189908990899093845291151560208401526040830152606082015260800190565b60405180910390a450505050565b606081356020830135600061267b6126766040870187613939565b612c99565b9050600061268f6126766060880188613939565b9050608086013560a087013560c088013560006126b261267660e08c018c613939565b604080516001600160a01b039a909a1660208b015289810198909852606089019690965250608087019390935260a086019190915260c085015260e08401526101008084019190915281518084039091018152610120909201905292915050565b612720602083018361350e565b6001600160a01b03168152602082810135908201526fffffffffffffffffffffffffffffffff6080808401358281166060850152811c604084015260a084013560c0808501919091528401359182166101008401521c61012082015236600061278c60e0850185613939565b9092509050801561280f5760348110156127e85760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e644461746100000060448201526064016106ee565b6127f28282612cac565b60a086015260808501526001600160a01b031660e0840152610e88565b600060e084018190526080840181905260a084015250505050565b8251805160009190612849888761284460408b018b613939565b612d1d565b60e082015160006001600160a01b03821661288d576001600160a01b03831660009081526020819052604090205487811161288657808803612889565b60005b9150505b60208801516040517f19822f7c0000000000000000000000000000000000000000000000000000000081526001600160a01b038516916319822f7c9189916128dc918e91908790600401613d80565b60206040518083038160008887f193505050508015612918575060408051601f3d908101601f1916820190925261291591810190613da5565b60015b61295c5789612928610800611a7d565b6040517f65c8fd4d0000000000000000000000000000000000000000000000000000000081526004016106ee929190613dbe565b94506001600160a01b0382166129e6576001600160a01b03831660009081526020819052604090208054808911156129e0578b604051631101335b60e11b81526004016106ee9181526040602082018190526017908201527f41413231206469646e2774207061792070726566756e64000000000000000000606082015260800190565b88900390555b5050505095945050505050565b6001600160a01b038216600090815260016020908152604080832084821c808552925282208054849167ffffffffffffffff8316919085612a3383613738565b909155501495945050505050565b60606000805a855160e08101516001600160a01b03811660009081526020819052604090208054939450919290919087811015612aca578a604051631101335b60e11b81526004016106ee918152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b8781038260000181905550600084608001519050836001600160a01b03166352b7512c828d8d602001518d6040518563ffffffff1660e01b8152600401612b1393929190613d80565b60006040518083038160008887f193505050508015612b5457506040513d6000823e601f3d908101601f19168201604052612b519190810190613e0b565b60015b612b98578b612b64610800611a7d565b6040517f65c8fd4d0000000000000000000000000000000000000000000000000000000081526004016106ee929190613e8c565b9098509650805a87031115612c1f578b604051631101335b60e11b81526004016106ee9181526040602082018190526027908201527f41413336206f766572207061796d6173746572566572696669636174696f6e4760608201527f61734c696d697400000000000000000000000000000000000000000000000000608082015260a00190565b50505050505094509492505050565b60008082600003612c4457506000928392509050565b6000612c4f84612fdf565b9050806040015165ffffffffffff16421180612c765750806020015165ffffffffffff1642105b905194909350915050565b6000818310612c905781612c92565b825b9392505050565b6000604051828085833790209392505050565b60008080612cbd6014828688613ed9565b612cc691613f03565b60601c612cd7602460148789613ed9565b612ce091613f4b565b60801c612cf160346024888a613ed9565b612cfa91613f4b565b9194506fffffffffffffffffffffffffffffffff16925060801c90509250925092565b8015610e88578251516001600160a01b0381163b15612d885784604051631101335b60e11b81526004016106ee918152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663570e1a3686600001516040015186866040518463ffffffff1660e01b8152600401612de1929190613846565b60206040518083038160008887f1158015612e00573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612e25919061385a565b90506001600160a01b038116612e875785604051631101335b60e11b81526004016106ee918152604060208201819052601b908201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000606082015260800190565b816001600160a01b0316816001600160a01b031614612ef15785604051631101335b60e11b81526004016106ee91815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b806001600160a01b03163b600003612f545785604051631101335b60e11b81526004016106ee91815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b6000612f636014828688613ed9565b612f6c91613f03565b60601c9050826001600160a01b031686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160e00151604051612fce9291906001600160a01b0392831681529116602082015260400190565b60405180910390a350505050505050565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff811660000361301b575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6040518060a001604052806130c360405180610140016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561313a5761313a6130e8565b60405290565b604051610140810167ffffffffffffffff8111828210171561313a5761313a6130e8565b604051601f8201601f1916810167ffffffffffffffff8111828210171561318d5761318d6130e8565b604052919050565b600067ffffffffffffffff8211156131af576131af6130e8565b50601f01601f191660200190565b6001600160a01b03811681146131d257600080fd5b50565b80356131e0816131bd565b919050565b60008183036101c08112156131f957600080fd5b613201613117565b91506101408082121561321357600080fd5b61321b613140565b9150613226846131d5565b82526020840135602083015260408401356040830152606084013560608301526080840135608083015260a084013560a083015260c084013560c083015261327060e085016131d5565b60e0830152610100848101359083015261012080850135908301529082528201356020820152610160820135604082015261018082013560608201526101a0909101356080820152919050565b60008083601f8401126132cf57600080fd5b50813567ffffffffffffffff8111156132e757600080fd5b6020830191508360208285010111156132ff57600080fd5b9250929050565b600080600080610200858703121561331d57600080fd5b843567ffffffffffffffff8082111561333557600080fd5b818701915087601f83011261334957600080fd5b813561335c61335782613195565b613164565b81815289602083860101111561337157600080fd5b81602085016020830137600060208383010152809750505061339688602089016131e5565b94506101e08701359150808211156133ad57600080fd5b506133ba878288016132bd565b95989497509550505050565b6000602082840312156133d857600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114612c9257600080fd5b60006020828403121561341a57600080fd5b813563ffffffff81168114612c9257600080fd5b803577ffffffffffffffffffffffffffffffffffffffffffffffff811681146131e057600080fd5b60006020828403121561346857600080fd5b612c928261342e565b6000806040838503121561348457600080fd5b823561348f816131bd565b915061349d6020840161342e565b90509250929050565b600080604083850312156134b957600080fd5b82356134c4816131bd565b946020939093013593505050565b6000602082840312156134e457600080fd5b813567ffffffffffffffff8111156134fb57600080fd5b82016101208185031215612c9257600080fd5b60006020828403121561352057600080fd5b8135612c92816131bd565b60008083601f84011261353d57600080fd5b50813567ffffffffffffffff81111561355557600080fd5b6020830191508360208260051b85010111156132ff57600080fd5b60008060006040848603121561358557600080fd5b833567ffffffffffffffff81111561359c57600080fd5b6135a88682870161352b565b90945092505060208401356135bc816131bd565b809150509250925092565b6000806000604084860312156135dc57600080fd5b83356135e7816131bd565b9250602084013567ffffffffffffffff81111561360357600080fd5b61360f868287016132bd565b9497909650939450505050565b6000806020838503121561362f57600080fd5b823567ffffffffffffffff81111561364657600080fd5b613652858286016132bd565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60005b838110156136a8578181015183820152602001613690565b50506000910152565b600081518084526136c981602086016020860161368d565b601f01601f19169290920160200192915050565b82815260406020820152600061258960408301846136b1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156109b6576109b66136f6565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613769576137696136f6565b5060010190565b818103818111156109b6576109b66136f6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee18336030181126137e657600080fd5b9190910192915050565b8183823760009101908152919050565b821515815260406020820152600061258960408301846136b1565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b60208152600061258960208301848661381b565b60006020828403121561386c57600080fd5b8151612c92816131bd565b65ffffffffffff818116838216019080821115613896576138966136f6565b5092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18336030181126137e657600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261390657600080fd5b83018035915067ffffffffffffffff82111561392157600080fd5b6020019150600581901b36038213156132ff57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261396e57600080fd5b83018035915067ffffffffffffffff82111561398957600080fd5b6020019150368190038213156132ff57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126139d357600080fd5b830160208101925035905067ffffffffffffffff8111156139f357600080fd5b8036038213156132ff57600080fd5b6000610120613a2184613a14856131d5565b6001600160a01b03169052565b60208301356020850152613a38604084018461399e565b826040870152613a4b838701828461381b565b92505050613a5c606084018461399e565b8583036060870152613a6f83828461381b565b925050506080830135608085015260a083013560a085015260c083013560c0850152613a9e60e084018461399e565b85830360e0870152613ab183828461381b565b92505050610100613ac48185018561399e565b86840383880152613ad684828461381b565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b89811015613b81577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087860301845282357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee18c3603018112613b5f578283fd5b613b6b868d8301613a02565b9550506020938401939290920191600101613aff565b505050508281036020840152613ad681858761381b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060038610613c00577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b85825260806020830152613c1760808301866136b1565b6040830194909452506060015292915050565b602081526000612c9260208301846136b1565b604081526000613c506040830185613a02565b90508260208301529392505050565b805180516001600160a01b031683526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e0810151613cc460e08501826001600160a01b03169052565b5061010081810151908401526101209081015190830152602081015161014083015260408101516101608301526060810151610180830152608001516101a090910152565b6000610200808352613d1d818401876136b1565b9050613d2c6020840186613c5f565b8281036101e0840152613d3f81856136b1565b9695505050505050565b6000610200808352613d5e818401878961381b565b9050613d6d6020840186613c5f565b8281036101e0840152613ad681856136b1565b606081526000613d936060830186613a02565b60208301949094525060400152919050565b600060208284031215613db757600080fd5b5051919050565b82815260606020820152600d60608201527f4141323320726576657274656400000000000000000000000000000000000000608082015260a06040820152600061258960a08301846136b1565b60008060408385031215613e1e57600080fd5b825167ffffffffffffffff811115613e3557600080fd5b8301601f81018513613e4657600080fd5b8051613e5461335782613195565b818152866020838501011115613e6957600080fd5b613e7a82602083016020860161368d565b60209590950151949694955050505050565b82815260606020820152600d60608201527f4141333320726576657274656400000000000000000000000000000000000000608082015260a06040820152600061258960a08301846136b1565b60008085851115613ee957600080fd5b83861115613ef657600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015613f435780818660140360031b1b83161692505b505092915050565b7fffffffffffffffffffffffffffffffff000000000000000000000000000000008135818116916010851015613f435760109490940360031b84901b169092169291505056fea264697066735822122093e850e4396f700d47114c313c3f40daaa68dcb42a0fa8b86bca5c435d4efd0464736f6c63430008180033608060405234801561001057600080fd5b50610213806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100f9565b61006c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60008061007c601482858761016b565b61008591610195565b60601c90506000610099846014818861016b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100f057600093505b50505092915050565b6000806020838503121561010c57600080fd5b823567ffffffffffffffff8082111561012457600080fd5b818501915085601f83011261013857600080fd5b81358181111561014757600080fd5b86602082850101111561015957600080fd5b60209290920196919550909350505050565b6000808585111561017b57600080fd5b8386111561018857600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156101d55780818660140360031b1b83161692505b50509291505056fea264697066735822122025e3e51bf5484c56ef832fea951d1cbcf619efe62d92bc5f73c90352cb70003a64736f6c63430008180033";

type SimpleEntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleEntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleEntryPoint__factory extends ContractFactory {
  constructor(...args: SimpleEntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleEntryPoint> {
    return super.deploy(overrides || {}) as Promise<SimpleEntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleEntryPoint {
    return super.attach(address) as SimpleEntryPoint;
  }
  override connect(signer: Signer): SimpleEntryPoint__factory {
    return super.connect(signer) as SimpleEntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleEntryPointInterface {
    return new utils.Interface(_abi) as SimpleEntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleEntryPoint {
    return new Contract(address, _abi, signerOrProvider) as SimpleEntryPoint;
  }
}
