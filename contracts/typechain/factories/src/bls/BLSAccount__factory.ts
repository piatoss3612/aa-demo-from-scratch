/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BLSAccount,
  BLSAccountInterface,
} from "../../../src/bls/BLSAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anAggregator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFromEntryPointOrOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[4]",
        name: "oldPublicKey",
        type: "uint256[4]",
      },
      {
        indexed: false,
        internalType: "uint256[4]",
        name: "newPublicKey",
        type: "uint256[4]",
      },
    ],
    name: "PublicKeyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_SUCCESS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlsPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "aPublicKey",
        type: "uint256[4]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "newPublicKey",
        type: "uint256[4]",
      },
    ],
    name: "setBlsPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0604052306080523480156200001557600080fd5b50604051620022b0380380620022b083398101604081905262000038916200012e565b6001600160a01b03821660a052816200005062000064565b506001600160a01b031660c052506200016d565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b55760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001155780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b03811681146200011557600080fd5b600080604083850312156200014257600080fd5b82516200014f8162000118565b6020840151909250620001628162000118565b809150509250929050565b60805160a05160c0516120cd620001e3600039600081816102a8015261108301526000818161045d015281816108520152818161090001528181610a5101528181610c8e01528181610ed90152818161113e015261153601526000818161125001528181611279015261149501526120cd6000f3fe60806040526004361061018f5760003560e01c80638da5cb5b116100d6578063c399ec881161007f578063e02afbae11610059578063e02afbae14610533578063ee472f3614610555578063f23a6e611461057557600080fd5b8063c399ec88146104e9578063c4d66de8146104fe578063d087d2881461051e57600080fd5b8063b0d691fe116100b0578063b0d691fe1461044e578063b61d27f614610481578063bc197c81146104a157600080fd5b80638da5cb5b146103c35780638f41ec5a146103f0578063ad3cb1cc1461040557600080fd5b80634a58db191161013857806352d1902d1161011257806352d1902d1461034a57806354fd4d501461035f578063861af77c146103ae57600080fd5b80634a58db191461030f5780634d44560d146103175780634f1ef2861461033757600080fd5b806319822f7c1161016957806319822f7c14610268578063245a7bfc1461029657806347e1da2a146102ef57600080fd5b806301ffc9a71461019b578063150b7a02146101d057806318fc5c441461024657600080fd5b3661019657005b600080fd5b3480156101a757600080fd5b506101bb6101b63660046118af565b6105bb565b60405190151581526020015b60405180910390f35b3480156101dc57600080fd5b506102156101eb36600461195c565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101c7565b34801561025257600080fd5b506102666102613660046119fe565b6106a0565b005b34801561027457600080fd5b50610288610283366004611a7c565b6106b4565b6040519081526020016101c7565b3480156102a257600080fd5b506102ca7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c7565b3480156102fb57600080fd5b5061026661030a366004611b15565b6106da565b610266610850565b34801561032357600080fd5b50610266610332366004611baf565b6108f6565b610266610345366004611c86565b6109a5565b34801561035657600080fd5b506102886109c4565b34801561036b57600080fd5b5060408051808201909152600581527f312e302e3000000000000000000000000000000000000000000000000000000060208201525b6040516101c79190611cfa565b3480156103ba57600080fd5b50610288600081565b3480156103cf57600080fd5b506000546102ca9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103fc57600080fd5b50610288600181565b34801561041157600080fd5b506103a16040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b34801561045a57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102ca565b34801561048d57600080fd5b5061026661049c366004611d4b565b6109f3565b3480156104ad57600080fd5b506102156104bc366004611da4565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156104f557600080fd5b50610288610a0b565b34801561050a57600080fd5b50610266610519366004611e63565b610ac2565b34801561052a57600080fd5b50610288610c41565b34801561053f57600080fd5b50610548610cbd565b6040516101c79190611ea9565b34801561056157600080fd5b506102666105703660046119fe565b610cf8565b34801561058157600080fd5b50610215610590366004611eb7565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061064e57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061069a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6106a8610e19565b6106b181610e7a565b50565b60006106be610ec1565b6106c88484610f65565b90506106d3826110bb565b9392505050565b6106e2611126565b84811415806106fb57508215806106f95750828514155b155b15610732576040517fb4fa3fb300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008390036107de5760005b858110156107d8576107d087878381811061075b5761075b611f21565b90506020020160208101906107709190611e63565b600085858581811061078457610784611f21565b90506020028101906107969190611f50565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111bb92505050565b60010161073e565b50610848565b60005b858110156108465761083e8787838181106107fe576107fe611f21565b90506020020160208101906108139190611e63565b86868481811061082557610825611f21565b9050602002013585858581811061078457610784611f21565b6001016107e1565b505b505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024016000604051808303818588803b1580156108db57600080fd5b505af11580156108ef573d6000803e3d6000fd5b5050505050565b6108fe610e19565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561099157600080fd5b505af1158015610848573d6000803e3d6000fd5b6109ad611238565b6109b68261133c565b6109c08282611344565b5050565b60006109ce61147d565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6109fb611126565b610a068383836111bb565b505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abd9190611fb5565b905090565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610b0d5750825b905060008267ffffffffffffffff166001148015610b2a5750303b155b905081158015610b38575080155b15610b6f576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610bd05784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610bd9866114ec565b83156108485784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610a7c565b610cc561183e565b6040805160808101918290529060019060049082845b815481526020019060010190808311610cdb575050505050905090565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610d435750825b905060008267ffffffffffffffff166001148015610d605750303b155b905081158015610d6e575080155b15610da5576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610e065784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610e1060006114ec565b610bd986610e7a565b60005473ffffffffffffffffffffffffffffffffffffffff163314801590610e415750333014155b15610e78576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b7f42e4c4ce1432650f17e41c4ea77ed12c0ab20b229d3ffd84a2ebc9f8abb25a83600182604051610eac929190611fce565b60405180910390a16109c0600182600461185c565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e740000000060448201526064015b60405180910390fd5b6000610f746040840184611f50565b159050611062576000610f85610cbd565b604051602001610f959190611ea9565b60405160208183030381529060405280519060200120905080848060400190610fbe9190611f50565b6080610fcd6040890189611f50565b610fd8929150612007565b610fe3928290612041565b604051610ff192919061206b565b604051809103902014611060576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f77726f6e67207075626b657900000000000000000000000000000000000000006044820152606401610f5c565b505b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001680825260006020830181905291909201529392505050565b80156106b15760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d80600081146108ef576040519150601f19603f3d011682016040523d82523d6000602084013e6108ef565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801590611184575060005473ffffffffffffffffffffffffffffffffffffffff163314155b15610e78576040517fce15531900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516111e4919061207b565b60006040518083038185875af1925050503d8060008114611221576040519150601f19603f3d011682016040523d82523d6000602084013e611226565b606091505b5091509150816108ef57805160208201fd5b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061130557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166112ec7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610e78576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106b1610e19565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156113c9575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526113c691810190611fb5565b60015b611417576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610f5c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611473576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610f5c565b610a068383611580565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e78576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff838116918217835560405191927f0000000000000000000000000000000000000000000000000000000000000000909116917f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de9190a350565b611589826115e3565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156115db57610a0682826116b2565b6109c0611735565b8073ffffffffffffffffffffffffffffffffffffffff163b60000361164c576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610f5c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516116dc919061207b565b600060405180830381855af49150503d8060008114611717576040519150601f19603f3d011682016040523d82523d6000602084013e61171c565b606091505b509150915061172c85838361176d565b95945050505050565b3415610e78576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826117825761177d826117fc565b6106d3565b81511580156117a6575073ffffffffffffffffffffffffffffffffffffffff84163b155b156117f5576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610f5c565b50806106d3565b80511561180c5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052806004906020820280368337509192915050565b826004810192821561188a579160200282015b8281111561188a57825182559160200191906001019061186f565b5061189692915061189a565b5090565b5b80821115611896576000815560010161189b565b6000602082840312156118c157600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146106d357600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146106b157600080fd5b60008083601f84011261192557600080fd5b50813567ffffffffffffffff81111561193d57600080fd5b60208301915083602082850101111561195557600080fd5b9250929050565b60008060008060006080868803121561197457600080fd5b853561197f816118f1565b9450602086013561198f816118f1565b935060408601359250606086013567ffffffffffffffff8111156119b257600080fd5b6119be88828901611913565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060808284031215611a1057600080fd5b82601f830112611a1f57600080fd5b6040516080810181811067ffffffffffffffff82111715611a4257611a426119cf565b604052806080840185811115611a5757600080fd5b845b81811015611a71578035835260209283019201611a59565b509195945050505050565b600080600060608486031215611a9157600080fd5b833567ffffffffffffffff811115611aa857600080fd5b84016101208187031215611abb57600080fd5b95602085013595506040909401359392505050565b60008083601f840112611ae257600080fd5b50813567ffffffffffffffff811115611afa57600080fd5b6020830191508360208260051b850101111561195557600080fd5b60008060008060008060608789031215611b2e57600080fd5b863567ffffffffffffffff80821115611b4657600080fd5b611b528a838b01611ad0565b90985096506020890135915080821115611b6b57600080fd5b611b778a838b01611ad0565b90965094506040890135915080821115611b9057600080fd5b50611b9d89828a01611ad0565b979a9699509497509295939492505050565b60008060408385031215611bc257600080fd5b8235611bcd816118f1565b946020939093013593505050565b600082601f830112611bec57600080fd5b813567ffffffffffffffff80821115611c0757611c076119cf565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611c4d57611c4d6119cf565b81604052838152866020858801011115611c6657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611c9957600080fd5b8235611ca4816118f1565b9150602083013567ffffffffffffffff811115611cc057600080fd5b611ccc85828601611bdb565b9150509250929050565b60005b83811015611cf1578181015183820152602001611cd9565b50506000910152565b6020815260008251806020840152611d19816040850160208701611cd6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600080600060608486031215611d6057600080fd5b8335611d6b816118f1565b925060208401359150604084013567ffffffffffffffff811115611d8e57600080fd5b611d9a86828701611bdb565b9150509250925092565b60008060008060008060008060a0898b031215611dc057600080fd5b8835611dcb816118f1565b97506020890135611ddb816118f1565b9650604089013567ffffffffffffffff80821115611df857600080fd5b611e048c838d01611ad0565b909850965060608b0135915080821115611e1d57600080fd5b611e298c838d01611ad0565b909650945060808b0135915080821115611e4257600080fd5b50611e4f8b828c01611913565b999c989b5096995094979396929594505050565b600060208284031215611e7557600080fd5b81356106d3816118f1565b8060005b6004811015611ea3578151845260209384019390910190600101611e84565b50505050565b6080810161069a8284611e80565b60008060008060008060a08789031215611ed057600080fd5b8635611edb816118f1565b95506020870135611eeb816118f1565b94506040870135935060608701359250608087013567ffffffffffffffff811115611f1557600080fd5b611b9d89828a01611913565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611f8557600080fd5b83018035915067ffffffffffffffff821115611fa057600080fd5b60200191503681900382131561195557600080fd5b600060208284031215611fc757600080fd5b5051919050565b6101008101818460005b6004811015611ff7578154835260209092019160019182019101611fd8565b5050506106d36080830184611e80565b8181038181111561069a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000808585111561205157600080fd5b8386111561205e57600080fd5b5050820193919092039150565b8183823760009101908152919050565b6000825161208d818460208701611cd6565b919091019291505056fea264697066735822122062f46f2fcf8f60ba80b2b1cdee7a82a9beb08d438349a8bda88950fb9512fad864736f6c63430008180033";

type BLSAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BLSAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BLSAccount__factory extends ContractFactory {
  constructor(...args: BLSAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BLSAccount> {
    return super.deploy(
      anEntryPoint,
      anAggregator,
      overrides || {}
    ) as Promise<BLSAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      anAggregator,
      overrides || {}
    );
  }
  override attach(address: string): BLSAccount {
    return super.attach(address) as BLSAccount;
  }
  override connect(signer: Signer): BLSAccount__factory {
    return super.connect(signer) as BLSAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BLSAccountInterface {
    return new utils.Interface(_abi) as BLSAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BLSAccount {
    return new Contract(address, _abi, signerOrProvider) as BLSAccount;
  }
}
